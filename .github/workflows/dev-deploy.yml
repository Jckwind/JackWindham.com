name: Dev-Deploy

# Trigger deployment only on push to master branch
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  configure-security-group:
    name: Configure SSH access
    runs-on: ubuntu-latest

    steps:
    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Setting environment variables..
      run: |
        echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
        echo "AWS_SG_ID=${{ secrets.AWS_SG_ID }}" >> $GITHUB_ENV
        echo "TARGET_DIRECTORY=/home/ec2-user/dev" >> $GITHUB_ENV
        
    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress \
            --group-id ${{ env.AWS_SG_ID }} 
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

  stop-current-deployment:
    name: Stop old web server.
    runs-on: ubuntu-latest
    needs: configure-security-group

    steps:
    - name: Stop Nginx server (Dev)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo systemctl stop nginx
    
    - name: Stop Next.js frontend (Dev)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd dev
          cd frontend
          pm2 stop "website"
          if lsof -i :3011 -sTCP:LISTEN; then sudo fuser -k 3011/tcp; fi
    
  build:
    name: Deploy to EC2 and build.
    runs-on: ubuntu-latest
    needs: [configure-security-group, stop-current-deployment]
    
    steps: 
    - name: Checkout new code
      uses: actions/checkout@v2

    - name: Deploy to EC2 (Dev)
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        REMOTE_HOST: ${{ secrets.HOST_DNS }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        TARGET: ${{ env.TARGET_DIRECTORY }}
  
    - name: Install Next.js frontend dependencies (Dev)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd dev
          cd frontend
          npm ci
    
    - name: Build Next.js frontend (Dev)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd dev
          cd frontend
          npm run build

  deploy:
    name: Deploy built Next.js app and Nginx server.
    runs-on: ubuntu-latest
    needs: [configure-security-group, stop-current-deployment, build]

    steps:
    - name: Start Next.js frontend (Dev)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd dev
          cd frontend
          pm2 start npm --name "website" -- start
  
    - name: Start Nginx server (Dev)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo systemctl start nginx
  
  revoke-security-group-access:
    needs: [configure-security-group, stop-current-deployment, build, deploy]
    name: Configure SSH access
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2
  
    - name: Setting environment variables..
      run: |
        echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
        echo "AWS_SG_ID=${{ secrets.AWS_SG_ID }}" >> $GITHUB_ENV
        echo "TARGET_DIRECTORY=/home/ec2-user/dev" >> $GITHUB_ENV

    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress \
            --group-id ${{ env.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
